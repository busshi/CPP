/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ScalarConversion.cpp                               :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: aldubar <aldubar@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/09/23 13:09:32 by aldubar           #+#    #+#             */
/*   Updated: 2021/09/23 16:01:43 by aldubar          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ScalarConversion.hpp"

ScalarConversion::ScalarConversion( void ) {}

ScalarConversion::ScalarConversion( ScalarConversion const & src ) {

	*this = src;
}

ScalarConversion::~ScalarConversion( void ) {}

ScalarConversion &	ScalarConversion::operator=( ScalarConversion const & rhs ) {

	if (this != &rhs)
		return *this;
}

Type	ScalarConversion::selectType( std::string const & s ) {

	Type		type;
	double		d = atof(s);
	unsigned	dotPos = str.find(".");

	std::cout << dotPos << std::endl;

	return type;
}
